{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","el","cn","id","href","onClick","e","tab","title","find","content","App","useState","setTabId","selectedTitle","setTitle","tabInfo","selectNewTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAE,OACV,oBAEE,UAAQ,MACRF,UAAWG,IAAG,CACZ,YAAaL,IAAkBI,EAAGE,KAJtC,SAOE,mBACEC,KAAI,WAAMH,EAAGE,IACb,UAAQ,UACRE,QAAS,SAAAC,GArBL,IAAaC,EAqBOV,KArBPU,EAqBsBN,GApB5BE,IACrBL,EAAcS,IAgBN,SAKGN,EAAGO,SAXDP,EAAGE,WAkBhB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAKa,MAAK,SAAAR,GAAE,OAAIA,EAAGE,KAAON,KAAea,SAAWd,EAAK,GAAGc,cChCxDd,EAAO,CAClB,CAAEO,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAM,WACjB,MAAkCC,mBAAShB,EAAK,GAAGO,IAAnD,mBAAON,EAAP,KAAsBgB,EAAtB,KACA,EAAkCD,mBAAShB,EAAK,GAAGY,OAAnD,mBAAOM,EAAP,KAAsBC,EAAtB,KAOA,OACE,sBAAKhB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBe,KAGtB,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,GAAiBD,EAAK,GAAGO,GACxCL,cAAe,SAAAkB,GAAO,OAdP,SAACA,GACpBH,EAASG,EAAQb,IACjBY,EAASC,EAAQR,OAYaS,CAAaD,UC3B/CE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.240d893b.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const changeTab = (selectedId, tab) => {\n    if (selectedId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(el => (\n            <li\n              key={el.id}\n              data-cy=\"Tab\"\n              className={cn({\n                'is-active': selectedTabId === el.id,\n              })}\n            >\n              <a\n                href={`#${el.id}`}\n                data-cy=\"TabLink\"\n                onClick={e => changeTab(selectedTabId, el)}\n              >\n                {el.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(el => el.id === selectedTabId).content || tabs[0].content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setTabId] = useState(tabs[0].id);\n  const [selectedTitle, setTitle] = useState(tabs[0].title);\n\n  const selectNewTab = (tabInfo) => {\n    setTabId(tabInfo.id);\n    setTitle(tabInfo.title);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId || tabs[0].id}\n        onTabSelected={tabInfo => selectNewTab(tabInfo)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}